{"version":3,"file":"webhookHandler.js","sourceRoot":"","sources":["../../src/utils/webhookHandler.ts"],"names":[],"mappings":";;;;;AAAA,+BAA+B;AAC/B,8DAAqC;AACrC,uCAA+C;AAC/C,2CAAqB;AAErB,sEAAwC,CAAC,wBAAwB;AAEjE,WAAG,CAAC,IAAI,CACN,eAAe,EACf,qBAAU,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC,EAC5C,KAAK,WAAW,GAAY,EAAE,GAAa;IACzC,IAAI,CAAC,oBAAc,EAAE,CAAC;QACpB,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;IAC5D,CAAC;IAED,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;IAC5B,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;IAEzB,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAW,CAAC;IAC7C,MAAM,cAAc,GAAG,OAAO,CAAC,gBAAgB,CAAW,CAAC;IAC3D,MAAM,cAAc,GAAG,OAAO,CAAC,gBAAgB,CAAW,CAAC;IAE3D,IAAI,CAAC,OAAO,IAAI,CAAC,cAAc,IAAI,CAAC,cAAc,EAAE,CAAC;QACnD,OAAO,GAAG;aACP,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,mCAAmC,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,MAAM,EAAE,GAAG,IAAI,cAAO,CAAC,oBAAc,CAAC,CAAC;IAEvC,IAAI,GAAQ,CAAC;IACb,IAAI,CAAC;QACH,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE;YACvB,SAAS,EAAE,OAAO;YAClB,gBAAgB,EAAE,cAAc;YAChC,gBAAgB,EAAE,cAAc;SACjC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;QACrD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;IACxE,CAAC;IAED,MAAM,EAAE,EAAE,EAAE,eAAe,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAC3E,MAAM,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,gDAAgD;IAChG,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;IAE3B,IAAI,SAAS,KAAK,cAAc,EAAE,CAAC;QACjC,IAAI,CAAC;YACH,MAAM,IAAI,GAAG,IAAI,oBAAI,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;YACvE,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,qCAAqC,CAAC,CAAC;QACvE,CAAC;QAAC,OAAO,GAAQ,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YAC3D,OAAO,GAAG;iBACP,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,+BAA+B,EAAE,CAAC,CAAC;QACxE,CAAC;IACH,CAAC;IAED,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,gBAAgB,SAAS,EAAE,CAAC,CAAC;IACpE,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAEvC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC,CAAC;AAC9E,CAAC,CACF,CAAC","sourcesContent":["import { Webhook } from \"svix\";\r\nimport bodyParser from \"body-parser\";\r\nimport { WEBHOOK_SECRET } from \"../config/env\";\r\nimport app from \"..\";\r\nimport { Request, Response } from \"express\";\r\nimport User from \"../models/user.model\"; // Import the User model\r\n\r\napp.post(\r\n  \"/api/webhooks\",\r\n  bodyParser.raw({ type: \"application/json\" }),\r\n  async function (req: Request, res: Response) {\r\n    if (!WEBHOOK_SECRET) {\r\n      throw new Error(\"You need a WEBHOOK_SECRET in your .env\");\r\n    }\r\n\r\n    const headers = req.headers;\r\n    const payload = req.body;\r\n\r\n    const svix_id = headers[\"svix-id\"] as string;\r\n    const svix_timestamp = headers[\"svix-timestamp\"] as string;\r\n    const svix_signature = headers[\"svix-signature\"] as string;\r\n\r\n    if (!svix_id || !svix_timestamp || !svix_signature) {\r\n      return res\r\n        .status(400)\r\n        .json({ success: false, message: \"Error occurred -- no svix headers\" });\r\n    }\r\n\r\n    const wh = new Webhook(WEBHOOK_SECRET);\r\n\r\n    let evt: any;\r\n    try {\r\n      evt = wh.verify(payload, {\r\n        \"svix-id\": svix_id,\r\n        \"svix-timestamp\": svix_timestamp,\r\n        \"svix-signature\": svix_signature,\r\n      });\r\n    } catch (err: any) {\r\n      console.log(\"Error verifying webhook:\", err.message);\r\n      return res.status(400).json({ success: false, message: err.message });\r\n    }\r\n\r\n    const { id, email_addresses, first_name, last_name, image_url } = evt.data;\r\n    const email = email_addresses[0].email_address; // Adjust according to your event data structure\r\n    const eventType = evt.type;\r\n\r\n    if (eventType === \"user.created\") {\r\n      try {\r\n        const user = new User({ id, first_name, last_name, email, image_url });\r\n        await user.save();\r\n        console.log(`User with ID ${id} created and saved to the database.`);\r\n      } catch (err: any) {\r\n        console.log(\"Error saving user to database:\", err.message);\r\n        return res\r\n          .status(500)\r\n          .json({ success: false, message: \"Error saving user to database\" });\r\n      }\r\n    }\r\n\r\n    console.log(`Webhook with an ID of ${id} and type of ${eventType}`);\r\n    console.log(\"Webhook body:\", evt.data);\r\n\r\n    return res.status(200).json({ success: true, message: \"Webhook received\" });\r\n  }\r\n);\r\n"]}